Welcome back to Introduction to Information Visualization. I want to talk about
a specific concept that we're going to use over and over and over again in
the lectures that you're going to see coming up. This is called the block model, it's going to be very common in an interesting way of
thinking about visualization, specifically how to design
information visualization. We're going to think about
this as being a puzzle, where we have
different kinds of pieces, some describing the
high-level task that we have, we're going to call
that the domain task, and then other ways of solving that domain task that
are going to fit in. The goal of this
course is to teach you to basically find
the right pieces and identify the different kinds of pieces to build a collection of pieces in your arsenal that will help you build good
visualizations. The specific puzzle that we're going to build
looks like this. This is adapted from an idea
developed by Miriah Meyer, Sedlmair Meyer, Quinan,
and Tamara Munzner. Tamara Munzner and
Miriah Meyer are both very prominent academics in the field of information
visualization, who have thought deeply about design and have
encouraged this kind of model that describes these layers of
different considerations. We've adapted it a little bit to be a little bit more simplified, but again to think
about the same layers, domain abstraction
technique in algorithm. So I'll explain what each
of these is in a second. But this is going to be a way of thinking about visualizations, where only part of
this is actually going to be about the visualization. Some of it is going to be
about identifying what is the goal and what is the dataset that
you're coming in with, that is your domain task. So we're going to ask, what
is your goal as an analyst? We're then going to identify
the abstraction, that is, which are the common sets
of goals or tasks that we might have across
many different domains? Then we're going
to start thinking about different techniques. So different visualizations
that we might use to solve those abstract task. Then we're going to
think about algorithms, that is specifically
how we're going to implement those
on the computer. I'll give it a bunch of
examples, but again, domain abstraction technique and algorithm are the layers
that we will work through. Each of these corresponds
to different puzzle pieces, and you will have many of
these that you'll be able to put together into
a coherent whole. So let's start with
a specific example. Let's say you're
a domain scientist, and in this particular case, you're a nutritional
domain scientist. As somebody who's working
with nutritional data, you have a specific
question that is, what is the relationship between weight and sugar consumption? You've gone out and collected
a bunch of data from the real world where you've measured
the weight of people, and you've measured
how much sugar they've consumed in
let's say a month. So this is a particular dataset and you have lots of
these recordings, and you want to be able to understand the answer
to this question. So you have data and
you have question. What is the relationship between weight and sugar consumption? This is your domain task. At the abstraction level, what you're going to do is take the data and take the task and describe it in a way that
doesn't use domain words. So we're going to think about what is actually in the data. In this case, what's actually on the data are two
quantitative variables. We'll talk about
different kinds of variables in other lectures, but for this particular example, all we have to recognize is
that weight is quantitative, it's just a number, and
sugar consumption is a number, how much sugar did we eat? So that is an abstraction
of the underlying data. We can also abstract
the problem, this question, what is the relationship
between weight and sugar consumption to
a very generic form of this. Find the correlation between
two quantitative variables. So we've taken weight
and sugar consumption, and we transformed it into
an abstract question. What is the correlation between two
quantitative variables? What you will notice is the domain terms,
things like weight, sugar consumption, and
the relationship between weight and sugar consumption are no longer in the abstract layer. So those terms no longer
appear in that layer, which means that we
can actually have a different domain
scientists come in and replace the terms in the data set and still have
the same abstract task. So we're going to jump ahead. We have somebody who's studying other kinds of demographic data, maybe the relationship
between age and height, this is somebody who's studying how children grow over time. So they have a question, what is the relationship between age and height? They
have a data set. Again, two quantitative
variables; age and height, and so they changed the domain
questions that they have, the domain dataset, but the abstract question
doesn't change. We can do this again. This
is a person who's studying the relationship
between the number of pirates and number
of lemons farmed. I don't know, they have
some random question about this. They've collected
a bunch of data. They have a good hypothesis of that there is a relationship. This is at the domain level. At the abstract level, the question and
the dataset do not change, two quantitative
variables, same task. Find the correlation
between two Q variables. What you should always
remember is that if can't swap the domains, so if you can't
change the domains at the top with the same task and data type without
changing your abstraction, then it's not abstract. So if the words lemons somehow appears in your
definition of the abstract task, then it's not abstract, because I can't change the underlying domain task
and still have this work. So now I have age and height, but I'm talking about lemons
at the abstract level, which is clearly incorrect
because we can't do that. So we need to be able to have abstract things that are truly abstract. Okay, that's great. So now we can look
at the technique. That is the specific
visualization that we're going to use. What is the specific
encoding that we're going to use for this data? In order to answer
the question finding the correlation
between two variables, what we might want to
do is encode Q1 on the x-axis and encode
Q2 on the y-axis, and what that roughly corresponds
to is a scatter plot. So that is this
particular technique maps to this particular encoding, that is the particular
visualization. The nice thing about
this is we can replace that particular technique
with another one. So we might choose to use a bar for every entity
and encoding the Q1 that is the weight by bar size and
encoding the Q2 by color. This might not be a great visualization technique
in our case, but we can think about
the different people that we have and maybe
it looks like this. So each of these rows
corresponds to a different bar with a different bar size and
different shades basically, that vary based on the amount
of sugar consumption. Maybe not a great
visualization when contrasted to a scatter plot, but it's still one that encodes the data
and might support the answer to
the question if there is a correlation between these
two quantitative variables. So again, this is at
the technique level. We have two different techniques
a scatter plot and this funny bar chart that are
used to encode the data, and may be able to
answer the question. So just as we had this rule that the domain terms do not appear
in the abstraction layer, visualization terms also do not appear on
the abstraction layer. So here, we're not
going to talk about lemons or about bar
charts or dots. Neither of these things will be part of the abstraction layer. That is, we're going to have the abstraction layer
serve as a way of separating the things
that we need to do at the domain versus the way that we
actually implement it. Why is this to our advantage? It is to our advantage that if we get
a new domain problem, that is one that we've never seen before and never thought about, we can think about
our pieces of puzzles, the things that we've
done in the past, our different puzzle pieces and find the one that
actually matches. So we can look and think, this one is asking
about a correlation. This is the puzzle
piece that we've used in the past
about correlation. Or maybe this one is about finding outliers
in a particular dataset. So finding outliers among
the student population, people who are getting
really bad grades. So this is an abstract version
of that question, finding outliers in general
not about bad grades, just about finding outliers
that we can use in this case. We will have a set of puzzle
pieces and we will give it a new domain problem figuring out which abstraction puzzle piece to use in that particular case. Same thing applies
to our next layer, which is that if we get
an abstract problem we've just chosen an abstract
representation, we can look through
our collection of visualization techniques
and use the right one. So if we have a question
about correlation, we might know that
the right thing to use as a scatter plot because that
is the right way to do that. There's good perceptual reasons
to use this and so on, versus a bar chart which is another option that we
might have which fits, but doesn't really
do the best job. So those are two
different options that we have and we'll
develop many options, you'll have a large set of
these puzzle pieces and you'll be able to pick the
right one to fit the problem. But having that
separation will let you identify interesting
techniques and interesting questions
within the examples that you'll see and build a very large collection to use with new problems
that you experience. The takeaways is,
the first one is that you're going to want to
come back to this lecture probably a few times as we go through this series
over the next four weeks. This particular concept is
a little bit difficult, this model of domain
abstraction and so on, but it is an important one and we're going to keep
coming back to it. So if you are
struggling with this, come back to this video lecture
a few other times. Our goal is to split the problem of building
a visualization, that's going to let us look at different visualizations
and learn different things from them. So even if we see an example
that's really specific, like it's about election data, or about the number of medals somebody's won,
or whatever it is, we're still going to be able
to identify things that we can take away and use
in other situations. So that's going to
allow us to build this large set of puzzle pieces. Then we're going to learn how
to make them fit together and to decide whether
they actually fit or not. All right, and with that,
thank you for listening.