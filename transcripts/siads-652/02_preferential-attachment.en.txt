In this video, we're going
to talk about a model of random graph generation that is actually going
to match some of the features that we
know real networks have. Let me begin by reminding
you that real networks tend to have these power-law-like
degree distributions. Where a few nodes have very large degree and most of the nodes have
very small degree. The question now is, what could explain this power-law-like
degree distribution that we see in many
real networks, and can we find a set of basic assumptions that can
explain this phenomenon and convert these assumptions
into a model that can generate synthetic networks that have this type of distribution? That's where the Preferential
Attachment Model comes in. Let me tell you how it works. You start with two nodes that are connected to each
other by an edge, and then at each time step, we're going to add a
new node that is going to connect to one of
the existing nodes. Now the interesting
part about the model is how the node chooses
which node to attach to. The way that it's
going to do that is by choosing to connect
to a node at random, but not with equal probability
for all the nodes, it's going to actually
choose with probability proportional to each of
the nodes current degree. In other words, when a node
has a very large degree, it is going to be more likely
to get a connection from that new node that's
coming in than a node that has a
very low degree. To be more precise, what we're going to say is that the probability of connecting to node U that has degree k_u, is going to be the degree of u, k_u divided by the sum of the degree of all the
nodes in the network. Let's run a small example of how this model actually works. Again, we start with two nodes that are connected to each other, and then we're going
to have our nodes arrive to the network
one at a time and choosing which node to attach to with probability proportional
to their degree. Right now, both nodes 1
and 2 have degree one, so when this node 3 arrives, it's going to choose to attach to one and two
with equal probability. Because they both
have degree one. Let's say it actually
chooses two in this case. Well now our probabilities
for the next node are going to have to be recomputed because now node 2 has a degree two, whereas one and three
have degree one. So when four arrives, the probabilities of attaching to each of the nodes are
going to be the following. It's going to be point
five for node 2, and then point two five
for each of nodes 1 and 3. Let's say that four
attaches to three, even though three had
a lower probability of obtaining that edge, it's still possible that
four attaches to three, and so let's say
that happens here. Now node 5 arrives and again we have to recompute
our probabilities, so now both nodes 2 and 3
have the same degree of two, and nodes 1 and 4
have degree of one, so the probabilities for two and three are going
to be point three three, whereas for one and four
they are point one seven. Let's say that five chooses
to attach to Node 2, then six comes in. Now, node 2 has the highest
degree with degree three, then node 3 with degree two, and then all of the other nodes, so the probabilities
are like this now. Let's say that six chooses
again to attach to node 2, which does have the highest
probability right now. We have our next node, and you can see that the
probability for node 2 keeps on increasing
as it increases. It gets even more connections and that makes that probability
increase even more. So now it's point
four for node 2, point two for node 3, and point one for the
rest of the nodes, and seven attaches
to two as well, and so you can see
what's happening here. Another node comes in and
probabilities have changed. Probability for node 2
is now point four one six and this one actually
attached to three, and so on. The network will be built in this way for any n that you want. One of the things we can prove about this model is that it actually generates a power
law degree distribution. As the number of nodes increases, the degree distribution of
the network will actually approach power- law
degree distribution, that looks like this is a constant c times k raised
to the power of negative 3. So the probability
that a node has degree k is going to
change like this, for some constant C. Now this
constant here depends on how many edges each node is going to generate
when it arrives. In our example, the way
we've defined it here, we're saying that every
node comes in and it attaches to a
single other node. We can generalize this a little
bit more and say that it connects to M nodes
in the network. All that would do is it would
change this constant C, but this would still generate power-law
degree distribution. As used that for the example, it's easier to think about if you just have one edge
to worry about. But we can generalize that and it doesn't change
things very much. What is the reason
behind this power law? Why is it that you
actually generate hobbes or nodes with very large
degree in a model like this. The reason is that it has this "rich get richer" effect where, as I was saying, when a node has a little advantage over all the other nodes
in terms of degree, that little advantage
starts to become larger and larger because as the
node has higher degree, the probability of getting even more connections
starts to increase. You saw node 2 at some point, got ahead of node 1 and
node 3 by little bit, and then that helped that node become even more and more rich. So this is this "rich
get richer" effect. When we talked about this model and why we
cared about these model, one of the reasons
we said was that this can help us understand
what's happening in reality. We can decide whether this
"rich get richer" effect, it's also what explains why our networks have these power
law degree distribution. For example, we looked
at the actor network where we connected any two actors who had appeared in
the movie together. Do we believe that when an
actor has many connections, meaning that the actor
is really popular, has appeared with many
others in movies? Is it more likely to appear with a new actor that is
just going to jump into network compared to some other current actor that does not have
as many connections? If so, if we do think that there's a "rich get
richer" effect there, then the "rich get richer" effect is in
part what might be explaining why that network has these power-law
degree distribution. Again, it's not that it proves that that's what's happening
in the real world. It says that if we assume
that in our model, we do see the rise of these power-law
degree distribution, so it is possible that is also what's happening
in the real world. Of course, we also talked
about the other reason, which is that having a model like this can help us
generate many networks of different sizes that now have this power law degree
distribution which can be useful for
other applications. The Preferential attachment Model produces networks
with degrees that have distributions that are
similar to real networks. We can use the
network X function by barabasi_albert_graph
with parameters n and m. This is named after the people who came
up with this model, and this function will generate
a network with n nodes and each node will attach
to m existing nodes, again, according to the
preferential attachment model. Let's generate one of
these with a million nodes and each node attaches to just
one of the existing nodes, like we did in our example, and let's take a look at what the degree distribution
looks like. You can see we have
degree on the x-axis, and then the y-axis we
have the fraction of nodes that have this degree, and we're on a log-log scale. You can see that we have
these straight line that characterizes the power-law
degree distribution. So you can see how it works in a network of a million nodes. In summary, as we
had seen last week, many real networks have degree distributions that
look like power laws. Now what we're trying
to do is come up with models that generate
networks that can help us identify
mechanisms that give rise to observed patterns
in real world data. In this case, we found that the Preferential Attachment Model produces networks with a power
law degree distribution, and this "rich get richer"
effect could be what explains the power-law-like
degree distributions we observe in the real world. We have a function in Network X that can
help us construct large networks with n nodes and m edges when the node
arrives to the network, so we can use this as a tool to generate lots of
synthetic networks that can be useful for
other applications like testing out how information
diffusion models, which we'll talk about next week, run on these types of networks. In the next video we're going to talk about another
model that generates random networks that
capture features that the Preferential Attachment
Model does not capture.