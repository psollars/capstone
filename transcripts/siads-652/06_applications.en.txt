Hello. To end the week, I want to show you
different applications of community detection
in different domains. Let's begin with communities
in molecular networks. In this paper, the
author has taken a yeast network of protein
to protein interactions and analyzed it using community
detection which helps him understand more about the different functions
of the proteins. The network has about 4,000
nodes and 6,500 edges. Again, the nodes
represent proteins and the edges represent interactions
between the proteins. In this plot, you can see a fragment of the network
and you can see how they have identified
different communities of proteins that are pretty well connected within and not well connected across. Using these community
detection algorithm in other network analysis, they are able to reveal
two types of modules. The first module is
protein complexes. These are groups of proteins that interact with each other at the same time and place forming a single multi-molecular machine. The second is dynamic
functional units. These are proteins
that participate in a particular cellular
process while binding each other at a
different time and place. You can see that through network analysis
and in particular, through community
detection algorithms, they're able to
understand a lot more about the functions
of these proteins. If you want to see more
details about the specifics, you can look at the paper
which is cited down here. The next couple of
papers look at how community structure can impact
the dynamics in epidemics. The first question is, what
is the relationship between modularity and the duration
and size of an epidemic? For this, the authors start
with the following network. They start with 50 small-world
networks with 40 nodes in each small world that are connected by 2,000 random edges. They first construct the
50 small-world networks using some parameters in
the small-world regime, and then they connect
them so that they're not just separate components
using 2,000 random edges. Then in order to vary
the modularity that want to create networks with
different levels of modularity, they re-wire some of the edges that are connecting
different small-worlds, some of these 2,000 edges, so that they now connect
nodes in the same world. By re-wiring more of these edges, they're going to
create networks with higher modularity and by
re-wiring few of these edges, they're going to have networks
with smaller modularity. This is how they
vary the modularity. Then they use a
SIR epidemic model and they run simulations with different
transmission rates. Let me show you what they find. We have two plots here. On the left, we have on the x-axis modularity
and on the y-axis we have the final size of the cascade for different
transmission rates. On the right plot we
have the same thing, but on the y-axis we have
the duration of the cascade. What you can see is that
as modularity increases, the final size of the
cascade decreases. That's because for
extremely modular networks, when you started with just one single seat node
that is infected, that seat node is able
to spread the infection perhaps within its cluster,
within its small-world, but is not able to send the disease to
other small worlds, to other parts of the network because the structure
is so modular, there are so few edges that are connecting the
different small-worlds. There's a similar pattern
here for the duration. Depending on the modularity, you may have longer or shorter
duration of the epidemic. There is this clear impact that community structure has
on the disease dynamics. Again, this is for the SIR model. But we have found
similar dynamics when we look at other
types of models. We've looked at the impact of modularity in the cascade
size and the speed of the cascade when applying it to a linear threshold model
with random thresholds. In this plot, we have
the modularity on the x-axis and on the
y-axis we have two things. We have in red, the cascade size, and in blue
we have the cascade speed. What we find is that there's this sweet spot area of modularity where you find
the largest cascades. But even within this sweet
spot area of modularity, you have a specific point that maximizes the cascade speed. Clearly, there's this relationship
between modularity and both the size and the speed of a cascade in the linear
threshold model as well. Going back to the SIR model, the next question
that they ask is, what's the relationship between modularity and the
best interventions? If we want to remove or vaccinate nodes
from the network in order to slow down the epidemic. We could imagine
choosing nodes that have maybe high degree or
high betweenness. This is related to the
influence maximization problem, where we wanted to
pick nodes that would maximize the spread of something. In this case we're
trying to minimize it, so we're thinking about
removing or vaccinating nodes. How we choose the
nodes is important. The question is, does
modularity impact how we should choose
the nodes to vaccinate? The answer is, yes. How you choose the nodes
depends on community structure. Let me show you this plot. There are three things that
this plot is tracking, on the x-axis, we
have modularity. On the y-axis we have
vaccination coverage, so what fraction of the
nodes do you vaccinate. Then the color here is showing the difference between the
cascade sides when you vaccinate nodes with high degree and when you vaccinate nodes
with high betweenness. When you have a blue node, that means that this
difference was negative. Which means that the
cascade size for the case when you
vaccinate the nodes with high betweenness was larger, which means that the degree
intervention was more effective since the cascade size when you vaccinated nodes
with high degree was smaller. Whereas when these
numbers are red, you have that these
numbers are positive, which means that the
cascade size for when you vaccinated the
nodes with a high degree, was larger than when you vaccinated nodes with
high betweenness. When you look at
modularity as you moved from left to right,
modularity increases. You can clearly see
that you go from seeing some mixture of red and blue, where you see mostly red when
you have high modularity. Which means that when you
have high modularity, it is really most effective to vaccinate the nodes
with high betweenness, not those with high degree. Of course this makes sense, when you have high modularity
that means then you have few edges that are
connecting the small worlds, and if you are going to vaccinate nodes
with high betweenness, you're going to get exactly
those that are showing up in the shortest paths between
the different pairs of nodes. So you're probably going
to block those edges that connect different worlds
from spreading the disease. That's most effective when
there are very few of those. Networks with high
modularity removing nodes with high betweenness
is a better strategy, than vaccinating nodes
with high degree. Finally, let's look at community detection and how it relates to link prediction. Here the question is, can
community structure help us with the problem of link prediction that we
discussed in week 2? What this paper does,
is that it looks at experiments with 10
different networks, I'm not going to tell you all the details of
what the networks are, you can look at the
paper for that. You can just think about
10 different networks, and then show that
additional information about community structure can actually improve the
precision of link prediction. If you recall in week 2, we talked about link
prediction and some of the ways that you can
approach the problem. Two of the ways that
you could do that were: common neighbors
and resource allocation. For each of those, you could have a bonus for neighbors that
were in the same community. But of course, that
required that you have some knowledge about the community structure
of the network. Well, now we have the
tools to actually learn something about the community structure
of the network. What this paper does, is it
takes 10 of these networks, it uses some community
detection algorithm to identify the communities. Then it compares how well
they can do link prediction, when you incorporate
that information about community structure to these measures of common neighbor and
research allocation. For each of these networks, what you have is four numbers. You have the common
neighbors precision, and you have the common neighbors precision when you incorporate the community structure
where you provide that bonus for nodes that
are in the same community. Then you have research
allocation, and again, research allocation with the information about
community structure. For each of these networks, the value that has the
highest position is bolded, so for the Amazon network, the highest one was
research allocation with community information with
a precision of 0.411. What you can see in general, is that for most of these
networks, with one exception, the best precision occurs when you use the
community information. Whether it's using the common neighbors or
research allocation, that varies a little bit, but it most of the time falls in the version that actually incorporates that
community information. It seems like in general, community structure does help with this problem
of link prediction. There are many more
applications of community structure
in different domains, but I just wanted to give you a little taste
of the types of things that people have done with this very useful technique.