Hello and welcome to
another walkthrough for PostgresSQL for Everybody. In this walkthrough,
we're going to do a simple musical track database. We're going to explore
the copy command. The idea is we're going take
a comma separated value, and it depends on how
you're doing this. I'm going to use PythonAnywhere, given that a lot of what we're doing
is on PythonAnywhere. Here I am in Linux, I'm in my home directory, I got no files other
than README.txt. I'm going to run the Postgres, pgSQL, or PSQL command here. But I have to get this file onto this same computer that's running my client so
that it can read it. There's a command in Linux, and sometimes Linux you
use wget or curl minus, so in this case they
do the same thing. They grab data from
a URL and they copy it to a file
on your hard drive. You'll see that this makes a connection like a
browser to a URL. Now I've got a file, is got about 20,000
characters size. If I edited with my happy
little vi library.csv, you see that this is a
comma-separated value that's got artist and title and album and
my rating in there, the number of views and
the length of this thing. It's comma separated value, the thing that
spreadsheets produce. Our goal is to load
this into a database. This track raw with
its going to have, there's six columns
in my CSV file, there are six columns
in track raw. I've got to run the
Postgres command. Here's all my Postgres details, but because I do this
way too many times, I also make it so that you
don't have to construct that. That's the PSQL command
that I've got to type. I'm going to copy my password
and paste that over. Now of course I'm not
talking on a Linux anymore, I'm talking to the PSQL command. I've got this
prompt, hello world. What? It's expecting me to type something and I'm not
typing what it wants in it. You'll notice that this
little arrow is telling me something and it's
telling me that I'm in the middle of communication. That's because it expects
that semicolon is going to happen to end a potentially
multiline SQL statement. In this case, it
was expecting me to type SQL and I didn't. But it was in a continuation and so
that's why it messed up. I can take a look at
my tables with \dt. \dt is not structured
query language. that is part of what it
is we do inside PSQL. This is a feature of
PSQL and you might use a different database
client and you will have a different way to list
all of the tables. But you can also
type SQL as well. Going back to our assignment, to thing we've got to do
is to run a bit of SQL. I know you'll notice that this is three lines of text
ending in a semicolon. I'm going copy that,
I want to paste it. You'll see it's telling me
that it's an a continuation. The second continuation says it's not only a continuation, but it's in a parentheses. But then if I hit
"Enter" that means that the semicolon is going to cause that statement to execute. If I say \dt, it's going to show that I've
got another table, those other three tables, PG free debug, meta, and result. There from previous
assignments that I was doing. I now have libraries CSV on my local hard drive and I've got a table
called track raw. The only thing I need to do is to run and copy this all in. Later we'll learn all ways using Python and other
things to put data in. But I'm going to actually use
a feature built into PSQL. Now, if you're using a
different database client, this \copy is not
necessarily going to work. You might be using a
full-screen client, but this is how we do it in PSQL. For this assignment
you might be best off just using MySQL. \copy is a PSQL command, not an SQL command, PSQL command. Going into this table
with these columns, read this file and split
it with commas in to CSV. That's all built in, we're just going to run it. It is going to have selected, that means it's going
to have inserted select count star track_raw. I've type it correct check. That's not good. What went wrong? I only got one select star from, think I needed to
say from track raw. Yeah, it's going to
make a little better. Select count star is
what I wanted to say. It's supposed to be
more than one track in there and there is, there's 296. I just select count
star track row was not a syntax error. I don't know quite
what it was doing, but it was doing something. That's why I got confused
and I saw only one. But really there's 296, which
makes a lot more sense. Doing the assignment, it says, hey run this select statement just to see if you
got the right data. I will run it in here's the
data: Legend Johnny Cash, Computing Conversation, Natural
Wonders and there we go. At this point, I can submit my assignment because
my assignment was to get this table created. Then the auto-grader is going to make it database connection to this same database and
run a select command, let's have it do that. It got a good answer
and away you go. I hope this has been a useful walkthrough of one
of these early assignments. Again, this one you might
want to use PSQL for, because of the use
of the copy command. There you can figure it out
another database clients, it might be an import button
or something like that. But for this one it might just be easier to go ahead and
use PythonAnywhere. Let me quit on to
this to get out \q. It might be easier to use PythonAnywhere for
this particular one. Hope you found this
useful. Cheers.