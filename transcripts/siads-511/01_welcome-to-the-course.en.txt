So welcome to SI 511. This is a course that I have dreamed of building for years. In our on-campus curriculum, we don't have a course like this, although I think once we're
finished with it here in the online curriculum
we're going to put it into the on-campus curriculum. So one of the problems we have in our on-campus curriculum
is that we have a course that's
supposed to teach you both SQL and how to
build online web sites. And you might have seen my
Web Applications for Everybody specialization, which is that course. And in that
course we teach MySQL, we teach PHP, in an upcoming course we're
going to teach Django. And so we have this course
where we kind of teach SQL, but we're mostly
teaching how to build web applications. And for
data mining students, that course is kind of
frustrating because why do you really want
to learn how to build web applications? And it's about 80 percent web
applications and 20 percent SQL. So what I really wanted to do was have a course that
was nothing but SQL, unashamedly nothing but SQL. And so SI 511 and SI
611 are pure SQL. It is the first time it's being taught and I look
forward to hearing from you as to what you think of the class as we go through it. I'm sure we'll have
to improve it. I've worked hard to build cool autograders, I've tried
to teach a bunch of stuff, I've packed it in and not had any
distractions. It's all SQL. So the basic outline of 511 is that the first two
weeks are generic SQL. I have used the slides
that you'll see in 511. Some of you have taken
my other courses. Even in Python for Everybody, we taught joins and
stuff in SQLite 3, and in Web Applications
for Everybody we taught joins in MySQL, and now here at SI 511, I'm teaching joins with Postgres, right? And so the first two weeks
are very portable. Now there's little
subtle details about how an auto-increment and a serial works and
stuff like that. But in general, the
skills that you're going to get in the
first two weeks are super applicable with a tiny bit of translation to
almost any database, Access, SQL Server, Amazon Aurora, Oracle, no matter what. So the first two
weeks are like SQL. Then what we do is the thing and I've taught that a bunch
of times. What I'm teaching for the first
time is what happens next and that's the
second two weeks and that's indexes and to dig into things that are not
part of the SQL standard, but are very Postgres-specific. And it's not like what
we do in Postgres doesn't also apply to
MySQL or Oracle, but it's not portable.
And so Postgres comes up with their own
way of doing things, and you have to kind of learn it. But as you're learning
this advanced stuff, keep in the back
of your mind that there is often a trans there's a lot more
translation to go from Postgres to Oracle or Postgres to MySQL, but there is a translation.
But you kind of have to learn advanced MySQL different from advanced Postgres, which is different from advanced Oracle. But the ideas are the same. And the reason is because
they're all competing, right? And so if Oracle comes
up with a feature, the other two have
got to match it. And so there's a lot of competition and evolution
at the leading edge. So if you look, for
example, at PostgreSQL, you will see that like Version 9 is quite
different than Version 12, and that's all about competition. We'll talk about that
both in 511 and 611. So I look forward to seeing what you're
going to do in class, but the last thing
I wanted to answer is the question
that you might have. You might be hearing about PostgreSQL for the very
first time in this course. And frankly, I learned PostgreSQL in order to teach this course. And so it's a bit of a departure from the things that I
have used and known, the databases that I've used and known through my whole life. I've used SQLite, I've used MySQL, I've
used SQL Server. I've used Oracle and I hated it, I've been good at
those other three, I'm no good at Oracle. And so why wouldn't I just use MySQL? And a number people who
might have designed this course. Why not use MySQL? It's a little subtle and a little complex, but here we go. For those of you who've known me in my other online
classes, you know that I'm very passionate
about open source. I don't want to teach you something that then you
have to turn around and buy. And increasingly,
companies are avoiding non-open source
solutions. As an example, Amazon used to use Oracle, but they had a five-year
effort to port everything out of Oracle and
I believe into Postgres. And so I just think it's basically wrong not
to use open source. That doesn't mean, you have a
company and they're using Oracle, then great, I want you to
know how to use Oracle. But if you have a choice, I would rather
teach you something that you can walk
away with for free. And as I've grown to know Postgres, I am so impressed with
the Postgres community. As a fellow leader, a leader of another open source community
that I'm the leader of, I am just impressed in
the culture of Postgres, I'm impressed with their
ability to innovate, I'm impressed with the amount of resources that go to Postgres. And I used to love MySQL.
And MySQL, unfortunately, a few years back, and you can see a blog post
I wrote on this, was purchased by Oracle. And so it's open source,
but purchased. And it's complex what happens when you
purchase open source. But the way MySQL worked in the license it
was actually purchasable. Most open source is in effect not purchasable in the same way. They purchased all the people, they didn't purchase
the code. And there's a fork of MySQL called MariahDB. And so in MySQL 5, and there's a MariahDB 5.
And a lot of people thought that,
"Oh, that'll be great. We can just switch." And everyone kept using MySQL
and no one really, in my opinion, has invested
enough in the MariahDB fork. And then what happened
is that because to some degree with
competition between Oracle, Postgres, and MySQL, and MySQL 5 was sort of
behind Postgres and Oracle, MySQL had to improve. And
then MySQL 8 comes out. So MySQL 8, a lot of
things I'm going to teach you in Postgres are present
in MySQL 8. But the thing that frightens
me about MySQL 8, and I literally have
avoided MySQL 8 myself, I will probably never use MySQL 8 because
the Mariah fork of MySQL, which is the
free and open port, might not keep up with it. And so that's worrisome to me, that MySQL, which used to
kind of hold the banner of open source going forward, because it's purchased by Oracle, and because Oracle is moving MySQL 8
forward very quickly in order to compete, the problem is that
means MySQL is moving towards a non-open source future as far as I'm concerned. So it's like "Dang
it, I love MySQL. I've used it all these years. I'm very good at it.
But it's time for me to learn Postgres and it's time for me to teach
you Postgres." So with that, that's
the "Why Postgres?" It's a little complex. You can read up on
some of my blog posts to get a better sense of that. The good news is that just about everything in this
class you can move between, you go to MySQL 8, you'll have JSON and full text indexing.
It'll be different. All the advanced stuff that
I'm going to teach you in this class, like I said, because they're all
competitive, including MySQL is a good competitor
to Postgres 12, MySQL 8 is a good
competitor to Postgres 12. You could take the ideas in both SI 511 and SI 611
and move them to MySQL. But the translation is a little bit bigger than just
your basic SQL stuff. So with that, let's go
ahead and get going.