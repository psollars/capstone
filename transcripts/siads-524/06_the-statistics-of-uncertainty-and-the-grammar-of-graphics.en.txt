Welcome back. In this lecture,
we're going to take a step back and look at a general framework for
uncertainty communication. Let's dig in. In many ways, this course is about
estimating statistical uncertainty and visually displaying the results. We start by deriving a distribution to
describe that statistical uncertainty. Now, this can take many forms that
we can discuss in this course and we will get it to many
different aspects of this. But a few common examples or general examples might be a confidence
distribution or a posterior distribution. And that's really that's
the first box we're talking about. The second box for our general framework
is the process of mapping the statistics we create from these distributions to
visual channels to a visual form of communication, a way to communicate that
uncertainty in an effective visual form. And we call this first box
the statistics of uncertainty. We're going to call the second box,
the grammar of graphics. Now, I know you've already heard that
term before you've studied the grammar of graphics in prior maths courses. We're going to explore how
these two interact and how they work together in order to
produce uncertainty presentation. Let's start by defining what we
mean by the grammar of graphics. Now, we're going to start
with the phrase itself and we're going to unpack it in two stages. First of all,
let's consider the word grammar. If you're familiar with English, we may
assume that when we reference grammar, we're referencing the rules governing
how we form and punctuate sentences. Now, when we discuss
the grammar of graphics, we're using the term a little
bit more generically. In this instance, grammar refers to
a set of fundamental principles or rules of an art or science. In this case, the fundamental
rules we're talking about or principles are all centered on
the creation of effective graphics. Hadley Wickham, who's one of the more
influential data science developers. Specifically, he's very
big in the R community, wrote an influential paper on the grammar
of graphics and he describes the grammar of graphics as a tool that helps us
describe the components of a graph. I like to think about this as a structured
systematic approach to how we think about and
really ultimately build graphics. So that's a lot of words to
describe the grammar of graphics. But we can also say the grammar of
graphics provides us a framework for translating data into visuals. And we're going to take
a look at some pictures and really how this all comes together. It does this not through low-level code
like you programming every little pixel or using a really high level GUI
where you don't have any control. But through something that sits
between these two end points, a flexible framework that
allows us to make for scalable, yet flexible and manageable
creation of data visualizations. Now, this is a simpler visualization that
maps out the relationships among data, the grammar of graphics and charts. Now you can see our goal is to go
from data to some graphics and convey meaning through the process. The grammar of graphics is the bridge
between these two points, not just for building graphs, but
actually also for evaluating them. It helps us convert data into marks for
screen or even perhaps paper, which are meant to again
convey meaning about the data. Now we specifically enact the grammar
of graphics through one of several statistical graphing packages that
are based on the grammar of graphics. And there's a lot of examples, but
common ones that you may have discussed in previous maths courses include GG Plot,
vega-lite and Altair. Altair will be the primary tool
that we use in this course. Now, in its most basic form, the grammar of graphics consists of three
components, data, channels and marks. These are the ingredients
of the grammar of graphics. In each instance of the grammar of
graphics, we map data to a visual channel or encoding sometimes we call it
and then map that onto some type of mark. For example, we might map
a quantitative variable like height to the length channel and then represent
that length through a line mark. Let's take a look at a more specific and
involved example, using the grammar of graphics. The easiest way to see the grammar of
graphics at work is to consider an actual example. This example that we're going to use here
comes from the popular empty cars dataset. The empty cars dataset has a collection of
records on cars and their fuel economy. Fuel economy in this case is
measured in MPG along with other attributes of the cars,
how much they weigh, the number of cylinders,
the amount of horsepower and so forth. Suppose we want to examine
the relationship between how much a car weighs its weight and
its fuel economy MPG. We'd like to begin by seeing
if the data are correlated. We could sort the empty
cars data table and try and decipher if there's a general relationship
between these two factors, but it would be a lot easier and more reliable
if we just visually examined the data. And so
we use the grammar of graphics to do that. So here's the transition from
the grammar of graphics General notes which are identified on the left
side of the screen to Altair. We start by referencing the data,
empty cars. You can see I've got that color
coded to align with the data. We map our variables of interest weight
and MPG to the X and Y positions. This is the channel work
that we're talking about. Well, we're just exploring
relationships here. The intuition is to map
weight to the X-axis, which is the independent
axis historically. Because we're wondering if fuel
economy depends on weight and not the other way around. Having mapped the MPG in the weight
to the position channel, now we only need to specify a mark. In this case,
we're going to choose the circle mark. And on the right side of the screen,
you can see how the data channel and marks of the grammar of graphics
actually relate to the code in Altair or how we rewrite that or
enact the grammar of graphics in Altair. It's a pretty simple example,
straightforward, but you can see the components all
work together data, channel, mark. Now, if we wanted to take the question
of the relationship between weight and MPG a bit further, we could consider
the size of a carburetor and maybe the number of cylinders. From the grammar of graphics perspective, it's very simple to add these
variables to our graph. We just need to identify
the data we need and then we need to encode
them to a visual channel. In this example, we set the size
channel to the number of cylinders in the color channel to
the number of carburetor barrels. We add these variables and
their encodings to the encode method. The result is that we have large and
small circles which vary by the number of cylinders and whose color vary by
the number of carburetor barrels. And you can see in the code
in the encoding section, I just added several more attributes to
add these data to the existing graph. Again, flexible,
scalable form of graph making. That's the grammar of graphics. Let's return to our general framework. Recall that the uncertainty visualizations
will create in this class will consist of two components. A derived statistical distribution that
is used to describe the uncertainty, what I call the statistics of uncertainty,
and a second component, the grammar of graphics framework
that we just described. The remainder of this lesson will
look to see how these two interact in the problems. And this really sets a foundation for
the remainder of the course. You'll be learning either about how we
derive statistical distributions or how to apply those distributions to
specific implementations of the grammar of graphics. This example may look familiar to you. It stems from an example from Matthew K,
who's an uncertainty researcher. Suppose we have two versions
of a software interface and we're running AB tests to see which
interface is easier for users to navigate. Now to calculate this, we're going to
take the difference in time it takes to complete a task
on each interface. In this example, we're going to take B-A. Suppose we want to estimate
the mean difference of B-A, so we collect the sample data of users
who are completing these tasks and we calculate the mean difference in time
it takes for them to complete the task. But it's a sample and we have
uncertainty around this sample mean. So we want to represent
the uncertainty of this meme. To do so, we need to step through
both parts of our two-part framework. The first step is to derive something
called a confidence distribution. Confidence distribution is
a probability distribution that we derive to estimate the uncertainty in
a population parameter in this case. In this course, you'll learn
about several ways to do this. We might talk about standard
normal distribution, we might talk about T-distributions,
we're going to talk about bootstrap distributions, we may talk
about posterior distributions. There's a lot of ways that we can actually
estimate this conference distribution, but those details are not
important presently. In this example, suppose we're
just going to pick the scaled and shifted T-distribution to model
the uncertainty around our meme. Once we have the distribution, we can derive ways to express
the uncertainty quantitatively. Now there are a number of
calculations we can complete that can be used to
construct visuals later on. I'm going to give you three
examples of those and the first is the density function
which we'll use in this class. And it's used to generate the shape of a
distribution like the normal distribution or the T-distribution. The second example is
a cumulative distribution function which calculates the cumulative
probability for a given value. And the third is the inverse of
the cumulative distribution function or CDF and
that's called the quantile function. And that returns the value from
a distribution at a given quantile. Now again, we're going to cover all
these terms in a lot more detail and show you how to actually use them. But we could use the statistics
of uncertainty and map the values that we create from
the statistics of uncertainty to the visualizations we're going to
create using the grammar of graphics. Let's just see how this works. We're going to use these statistics
to make an uncertainty visualization specifically the one I've
highlighted on the screen. This uncertainty visualization
provides a couple things. First, it gives us that overall
sample mean, remember B-A, the mean difference gives us that mean. But it also surrounds that point on
the screen with a density distribution and layered conference intervals, specifically a 95% confidence interval and
a 66% confidence. So we really have several different
uncertainty components at play along with our point estimate. We'll look at how we can use the grammar
of graphics to map the values that we created in the statistics of uncertainty
to create a graphic like this one. Blowing that up a bit, let's just zoom in
to make sure we can identify the parts of this uncertainty plot. So you can see on screen there,
the curved distribution there, that's our density distribution. Again, this is being built on
the T-distribution in this case, but we can build it a lot of different ways,
as you'll see in the course. But that's the density distribution
that we're referring to. And then below that, you can see there
are several lines along the X-axis. And I pointed to the end points,
it might be a little hard to see but the end points of a 95% conference
interval, we're also going to map those. So I just want to make sure that you
understand the components we're referring to as we go from the statistics of
uncertainty to an actual implementation of the grammar of graphics. So let's get into it. First, let's use the density
function that we created in part one to define the density distribution
that surrounds our point estimate. The density function in general. What it does is it takes an X-value,
and it returns a Y-value and that Y-value forms the pretty
curve that you see. So the width of that curve is
determined by the density function and the parameters that you provide it. We're mapping the output of the density
function to the Y position. In this case, marking it as area. That's the specific attributes
in this implementation of the grammar of graphics to produce
the graph that we have on screen. We're going to add to that though. The next step is we can
map the quantile values. Again, we calculate those in part
one using quantile functions and we can map those values to the X1 and
X2 position. And we do that to define
the end points for our 95% confidence serve
that surrounds our meme. And so there's two things
I want you to note here. The thing that we're using to mark those
end points is called the quantile function that gives us the values
at a certain quantile. In this case, percentiles. And the second thing I want you to
know is just how we translate that to the grammar of graphics. In this example, we're marking that as
an error bar between these two positions. Again, the implementation in Altair
might look a little different. Now what's really powerful about
this two part framework that we're discussing is how modular it is. We can build a visualization like
the one that we have here on a specific set of uncertainty statistics. In this case, we build a confidence
distribution off a scaled and shifted T-distribution, but
we could have done it differently. There are other ways that we can
derive a confidence distribution. We might look at a bootstrap distribution
to create a confidence distribution and the associate statistics of uncertainty. Even though the underlying mechanics
are very different when we use bootstrap versus, let's say, a scaled and shifted T, the result from a grammar of graphics
perspective is basically the same. We're simply mapping in this case,
a density estimator and the quantile function from
the bootstrap to the associated visual channels to create
the uncertainty plot. This is the power of the grammar of
graphics is that we can change the top box but leave the bottom box the same. Viewed one more time, we might go in
a completely different direction and use Bayesian statistics to
create a posterior distribution. Now, once again, while the underlying
mechanics of the statistics uncertainty are quite different, the way we map them to the visual using
the grammar of graphics does not change. Again, the power of grammar graphics. Hopefully, this makes clear to you that
two fundamental aspects of this course. You're going to learn how
to drive distributions and the associate statistics of uncertainty. And you're also going to learn how to map
those two visualizations using packages built on the grammar of graphics. We'll try and keep those two aspects in
mind as we progress through the course. Thank you.