Hi, this is Qiaozhu Mei
from School of Information. Let's talk about
sequential patterns. So we will introduce the
itemset representation of data. We've talked about
frequent itemsets as the particular
type of patterns, when you represent your set of category items as itemsets. Similarly, when you
represent your data as the sequence of
categorical items, that means a set of
categorical items plus orders, you can extract frequent
sequential patterns. So the frequent
sequential pattern is essentially a frequent
itemset plus the order. If you use this analogy, you can see that because of
the order in the sequence, repeating items now matter in the frequent sequential
pattern which does not matter in
frequent itemsets. Order matters, the
absolute positions among these items don't matter. To give you an example, let's look at your favorite, your scenario, shopping baskets. We've talked about
how to represent a set of shopping
transactions as itemsets. So here we have five transactions and
in every transaction, you have a number of category items that your
customers have purchased. So we've talked
about how to extract frequent itemsets
from such a database. For example, the first
itemset as itemset that consists the
single item beer has the support of 80 percent. That means it appeared
in four out of five transactions and
a two itemset pattern of beer and milk, have the support of 60
percent and a three itemset; beer, milk, and lemon has
a support of 40 percent. Then we've talked about, if you decide to look at patterns with the meaning of
support of 50 percent, then among the three
frequent itemsets, the beer and the beer and
milk are both frequent. Now, suppose you realize that the order among
these items matter and you decide to represent these shopping baskets
as sequences of items, what would have changed? So now, every transaction
becomes the sequence of items where the others
among these items matter. So what happens to these
frequent itemsets? If you look at the support
of one itemset beer, the support is still 80
percent because the item beer, no matter whether you're
looking at the order or not, it appeared in four out
of five transactions. So this is good but
the problem is that the pattern beer and milk, because we care about the order, the support is no
longer 60 percent. Similarly, for the third item; beer, milk, and lemon, you've now with respect to the orders among
the three items, their support is again
no longer 40 percent. How so? Let's first look at the pattern,
beer and the milk. You can see that the item, beer and milk appeared
in three sequences. If you don't look at the order, they do appear in transaction
one, two and three. However, because now
the order matters, the third transaction, because
beer appears after milk, it should not come towards
this sequential pattern and that's why the actual support of the sequential pattern beer, the milk is only 40 percent
instead of 60 percent. Similarly, if we look
at the support of the third sequential
pattern, beer, the milk, the lemon, you can see that all three items appeared
in two transactions. However, in the
third transaction, the order is not consistent
with the pattern. So that says there's only
one transaction that have all the three items
and with the same order. So the actual support of these three subsequence is
only 20 percent instead of 40. What's interesting is that if you look at transaction two, there is another item, the lollipop that is added
in between beer and milk. This is okay because
as we said that, as far as the order is preserved the three
pattern beer, the milk, the lemon is still the
subsequence of transaction two.So based on this new
calculation of support, now we can see that
if you choose to represent your shopping
baskets as sequences of items, and if you decide to use the same minimal
support, 50 percent, then among the three patterns, only the pattern
beer is frequent. The other two patterns are
below the minimal support, so they are not
considered as frequent. That's the difference between frequent subsequences
and frequent subsets. So how to extract frequent sequential patterns
of frequent subsequences? If you remember that, we have been relying on the a priori criterion to
extract patterns from itemsets. If you represent your
data as sequences, the a priori criterion
still holds. In this case, if we
know that the sequence is frequent then we
can fairly say that, all it's subsequences have
to be frequent, right. Why? Because if your
longer sequence is frequent then that means all
the shortest sequences and a part of this longer
sequence have at least appeared in the same
number of transactions, so they all have to be frequent. In other words, if we
know the shorter pattern, a shorter sequence
is not frequent. For example if we have known
then the shorter pattern, the two pattern beer, the milk is not frequent. Then there's no need in
your calculation to even check the support for the longer pattern
beer, milk and lemon. Why? Because if the shorter
pattern is now frequent, then it's super-pattern,
the longer pattern cannot be frequent according
to the a priori criterion. So based on this a
priori criterion people have developed algorithms to efficiently extract frequent sequential patterns
from sequential databases. These algorithms are more or less generalizing the a priori
algorithm itemsets. For the other concepts that
are related to itemsets, for example association rules, this too apply to sequence data. But just remember that the order among the items
are now sensitive. Similarly if you remember
that we have talked about different ways to
evaluate the interestingness, the importance of
frequent itemsets and these metrics still apply to
sequence data such as lift, such as mutual information, such as pearson coefficient. But they have to be applied
in order sensitively. Let's look at one example
of association rules. If we extract
association rules from a set of items from a
database of itemsets, that means if we ignore
the order among the items, then we can see that
the frequent itemset, beer and milk has a
support of 60 percent and the association rule
from beer to milk has the same support and because among the four
itemsets where beer appears, three of them also have milk. Then we say that
the confidence of this association rule from
beer to milk is 75 percent. So remember this from our
discussion about itemsets. Now, what happens if we
now preserve the order, if we now can see the
order among these items? What happens to the
association rules? You can see that, if
we choose to represent every transaction as
a sequence of items, then we have to deal with
association rule with order. When we look at the pattern, beer and milk because order matters, we have shown that the support of this pattern is no
longer 60 percent, it's only 40 percent. Now, if we look at
the association rule, from beer to milk
because order matters, that indicates that
once you've seen beer, how likely you'll see milk in the following items,
order matters. So then the support
is only 40 percent, the support of association
rule is essentially a support of the corresponding
frequent itemset. The confidence is no longer
75 percent, what is it? If you look at the four
transactions where beer appears, only two of them have milk
in the following items. So that means the confidence of this association
rule from beer to milk is only 50 percent
instead of 75 percent. So if you describe this
association rule with order, you can see the support decreases and the confidence
is also different.