We will talk about the
difference between discrete and continuous
data representation. This will help us
understand why we need time series as another
data representation. Why can't we just use sequences? Why do we need time series as another data
representation at all, given that we have already
got sequences and vectors? This is because there
is the huge difference between discrete versus
continuous data attributes, and time series, as
we are going to see, is very handy to represent
continuous data attributes. What do we mean by discrete data? If a data is discrete, then the values are either
finite or countable at least. Opposite is continuous data where the values are infinite
and not countable. To give you some examples, what are the possible
discrete attributes? Well, for example,
binary attributes, one or zero, true or false, and there's nothing in between. So you can see the
values are discrete. Or categorical values,
such as names of people, items, nodes in a
network, or edges. You can see that these fall
into different categories. If you say that the every
name is the category, and there's nothing
in between two names. Or ordinal data. For example, you
can actually give a rating of a movie from
one star to five star. You cannot give a 3.5
star or 3.4995 star. These can also be interpreted
as discrete data. Another example which is infinite but countable
such as numbers. For instance, the age of people, as we can say that there may be someone who
could live forever. So the value of ages
could be from 0, 1, 2 to infinity, but
they're still countable. Year is also a countable
attribute or the integers. These are known as
discrete attributes. You can see that you
cannot infinitely place something in
between two values. That's why they're
called discrete. Other attributes
could be continuous, for instance, real numbers. If we are talking
about temperature, if you say that today
the temperature is 85 degree and tomorrow is 87. You can actually put
numbers in between. You have got 85.5934,
and so on, so forth. You can go that way
ever. Or RGB colors, or probabilities. These are all in the form
of real numbers that you cannot really find the
nearest two real numbers. That's why the attribute is
called continuous attribute. That's why we use vectors
instead of item sets and sequences to model real values. When professor you were
talking about vector data, you said that we use vectors to represent real numbers, no? Well, this is true. But we can't just use vectors
for time-series data. The reason is the following. Let's take a look at the
example. Let's say, weight. This is a topic that I
wanted to avoid nowadays. Let's say that we are
measuring the weight of my oldest friend,
Jabba the Hutt. You can take the measurement
right now and says that his current
weight is 160 pounds. Well, I wish I have that weight. This is one measurement. This is also known as
one-dimension if you're using vector representation
for the weight. But instead of taking the
measurement just for once, you can also measure the
weight every five years. In this case, you are actually generating a vector of
numbers. Aha, vectors. Generating the vectors of
weights and every dimension corresponds to a timestamp where you actually
take the measurement. You can see that we have
multiple measurements and the number of
dimensions is countable. In this case, you can indeed use the vector to
represent the data. However, your reality, even if you don't want to
measure your weight frequently, in theory, you have
a weight value at any time point, do you agree? The measurement where the
attribute exist anytime, no matter you measure it or not, in other words, theoretically, there is the continuous value. That is measuring
your weight over time and when you
are really taking measurements you
actually sampling from this continuous line
does that make sense? In this case, your data has an infinite number of dimensions, because there's just
infinite timestamps. And no matter how frequently
you measure weight, you can always zoom-in and take measurements in an
even higher frequency, so you can see that
in this scenario, your data is numerical, but it has infinite number of dimensions and you
can zoom in into any two given dimensions and these two properties cannot be handled by vector
reorientation. Another example is this cosmic
microwave background scan, you can see that, well in theory, you can actually see the continuous distribution
of the microwaves, you can take one measurement
from the universe, and then this gives you
one commercial value. This is one dimensional data, everything's cool, you can
use the vector, right? Or if you want to
just draw this image, you only need will take
fine line measurements to build the visualization. Why? Because the resolution
of this picture is fixed, you don't need infinite number
of values but in theory, there are infinite values available in a continuous
space of the universe, so no matter how
close that you're taking to temperature
measurements, you can always zoom in into
the space and takes on temperature in a location that's between the two locations. So this is another example of continuous data that cannot be easily represented
as the vector, so these two examples are known as Data with
continuous dimensions, time and space, in fact you can actually see many other examples of data with
continuous dimensions. Time is one, Geo coordinates, the 2D negative and attitude
of your map is another, space you have 3D, and sometimes people say that space have even
higher dimensions. That's another good example of continuous dimensions,
temperature and distances, also good examples of continuous dimensions and
experimental conditions. For example, when people are
generating micro-array data, they're recording the gene
repression level over different experimental
conditions and they experimental condition is
the compound of temperature, of pressure, and of many other dimensions and all
of them takes real values, so in theory that there are infinite number of
experimental conditions, if you use the vector to record all the possible values of all the possible
experimental conditions, you will again run into the problem of continuous
dimensionality, when you have data with
continuous dimensions, you can see that vectors and
matrices are not suitable, This is the example of gene
expression matrix over many different
experimental conditions where every row corresponds to the gene and every column corresponds to the
experimental condition. As we can see that if the number of dimensions
becomes infinite, then how can you
declare such a matrix? If it's not feasible, not only [inaudible] in
any programming language. Moreover, remember that to deal with continuous dimension, a common activity is to zoom in into the
particular region, you can zoom in to
arbitrary granularity. For instance, if you're
think that, "Oh, the temperature that I used in my experimental conditions
is not fun enough, I can actually even either lower or make the temperature
higher," and in that case, you have to continuously
add dimensions into the vector representation and that becomes very hard, not effective, that's why we need a new and special
Data representations for data with
continuous dimensions. And time series is
one good example. So to represent data with
continuous dimensions, instead of using a
matrix or the vector, we usually use the function
over the dimensionality. For example, in time series data, we say that x is the list of paired numerical values
with time stamps. To write this into a
continuous format, we can just say that x_t, which is the numerical
value in any of the pairs is actually
a function of time. This function f takes the
input of any time stamp and gives you and outputs the
measurement at that time. You can see that this really solved the problem of a
continuous dimensionality because you'll no
longer need to declare how many time stamps
are there in total. Because you don't know that. You could go into infinity. Also, you can arbitrarily
zoom in into time stamps. If you think that the
measurements over one week is not fine
enough, then fine. You can actually ask for the
value of every given day or every given hour or even every given
seconds or nanoseconds. All you need is to find this
continuous function f(t), and that gives you the
measurements of net time point. Having this in mind, it is really curious to see that how time series is different
from other representations. If you can use time series
to model continuous data, how is that connected to discrete data such as
sequence or vectors? In fact, time series gives you a nice transition between continuous representation
and discrete representation. Well, we're familiar with the discrete representation
of time series. Basically, we take measurements at a given set of time stamps. Like measuring the
weight of Jabba the Hutt every five years. This is very much
connected to sequence data although we're looking at numerical attributes and
time stamps matters. We also talk about the
continuous representation. Then the time series is
actually a function of time. It outputs the measurement of weight given any time point. Between these two
representations, you can actually go from the
continuous representation to the discrete representation
by sampling the time stamps. This is to say that
suppose you have such the time series
function, F(t). If you want to generate a discrete list of
numerical values, all you need to do is
to sample a set of time stamps and then
you input the set of time stamps to the
function and it gives you the numerical measurements
at these given time stamps, so from the continuous
representation to the discrete representation, the activity is called sampling. You can also go from
the other way around, from the discrete
representations. In fact, this is usually
what we collect in reality. We take the measurements. We cannot take the
measurements infinitely. We have to take the measurements every once in awhile and that gives us the discrete
list of our weights. From this discrete
representation, we can actually derive
the function of t. We can derive the
continuous representation. This is known as regression
or generalization. Through regression
or generalization, we can actually transform
the discrete list of time stamped values into
the continuous function. That can be generalized
to any other time points whether or not you have actually taken
the measurements. You can see that time
series is powerful because that allows you to transit between continuous and
discrete representations. In fact, in time series analysis, we routinely transform the data from and to different
representations. Some of them are continuous and some of them are discrete. We will revisit
this figure later. But you can see that through
different transformations, such as Discrete
Fourier Transformation or wavelet analysis, you can actually find different representations for
the same time series data. Some of them are continuous, like the regular
Fourier transformation, and some of them are discrete. You can even transform time
series into a sequence, which we will discuss
later in this class.