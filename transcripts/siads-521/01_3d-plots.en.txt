In this session we're going to talk about
a visualization that sparked my curiosity about the third dimension and what to consider when you're
tempted to use 3D visualizations. An important question is, when is it really beneficial to
project your data in three dimensions? We all know that people love
the cool factor of 3D, but I think most people know
by now to avoid it. However, it can still be
useful in some instances. For instance, when transitioning to
a three-dimensional space you may enjoy greater creative freedom when
creating your visualizations. The extra dimension can also accommodate
more information in a single plot. However, many may argue that 3D is nothing
more than a visual gimmick when projected into a 2D surface, as it can obscure
the interpretation of your data points. For the most part 3D plots in Matplotlib
have a similar structure as 2D plots. As such, we will not go through every
type of 3D plot there is in this section. Instead we'll just really focus on
one type, which is a 3D scatter plot. We've already explored scatter
plots in two dimensions, so let's try to create a 3D scatter plot now. Let's load in the usual packages. So Pandas, Numpy, and
Matplotlib and pyplot. And we'll also load in the mplot3d
tool kit that is included with Matplotlib. This is what's responsible for
rendering 2D plots in a 3D plane. So from mpl_toolkits import mplot3d. Three-dimensional plotting is one of the
functionalities that benefits immensely from viewing figures interactively
rather than statically in the notebook. So to use that interactive figures
you need to use the %matplotlib notebook rather than the map plot inline. So we'll %matplotlib, go. Okay, now we need some data points for
our three dimensions. Let's explore the historical
rental prices for some popular cities in Orange County,
which I got from apartmentlist.com. So we'll load in this data RentCali2 using pd.read_csv. The data set contains information on
rental prices from 2014 to 2018 for studio apartments and
one to four bedroom properties as well. If we use the .head we can see
that the columns for location, bedroom size, date and
price, and national price. Now we can set the figure and
axes and pass it the keyword 3D for the projection and
create a three dimensional axis. So we'll do fig equals PLT figure, ax equals plt.axes, and
then projection equals 3D. Cool, notice that the interactive
nature of the visualization, if we move the cursor within the figure,
we can see that the x, y and z values at the bottom
automatically change accordingly. Okay, let's create a 3D scatter plot
of national price, price, and year. So we'll set this up the same
way with fig and ax. And pass that our rental data for
the x, y and z variables. So we'll create say x we'll call the year, y will be the price, and
z will be the national price. In analogy it was more common two
dimensional plots, discussed earlier, these can be created using
the ax.plotlot3d and ax scatter 3D functionalities or
functions. So ax scatter 3D, and
then we'll pass that our x, y and z. And let's add some labels so we'll make
sure that we understand what's going on. Ax set to year for the x label,
and we'll set the y label to OC price, and
the z label to the national price. Notice that by default the scatter
points have their transparency adjusted to give a sense
of depth to the page. But overall this isn't really very
informative data visualization, is it? This is because two of our variables,
year and average national price, have very limited variance. And as a result, the third dimension isn't really providing
any a new additional information. So this is really a great example of
a poor application of 3D plotting. Let's try another example
with some new data. So we'll call our dataframe DF, and we'll just create some data for
x, y and z. And set up our plot like
we have before with fig and ax and pass it in our data. Using ax.scatter3D again. And we'll make the sky blue. Let's give this data
a story using the labels. For instance, we can take the x-axis
to be kids representing the number of households with children under 18. And the y-axis to be assistance
representing the households receiving public assistance. And z to represent the rent, median rent, as these are our three variables. We'll label those accordingly. So x is households with children under 18, y is households receiving public
assistance, and z being the median rent. And let's show the plot. Okay, so it looks like this is
providing a bit more information about how these variables move together. For instance, there appears to be
a positive linear relationship between the amount of assistance being
provided and the household rent. But still, it's a bit difficult
to make a clear story here. One of the main limitations of
3D visualizations is that they don't work well as a 2D chart. Out of necessity we lose information
about the third dimension because we're only looking at a single
projection of the data into a 2D screen. While the three-dimensional
effect is sometimes difficult to see within a static image, an interactive can lead to some nice
intuitions about the layout of the points. Additionally, the 3D scatter plot is most
useful for small to medium-sized datasets. For larger numbers of observations the
data points quickly become overwhelming, and it's no longer effective for
visualization. So this is our way of
being able to compare and see the differences between
three dimensions of data. Ideally, these examples will highlight the
value of taking a more critical approach prior to using a 3D visualization.