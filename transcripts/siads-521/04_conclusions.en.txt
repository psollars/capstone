In this course, you've seen a lot of different
techniques to explore data visually. Some of these, such as bar charts,
line charts, and scatter plots, you've actually seen before in life. Actually, come to think of it, a number
of these data literacy methods are being taught in primary and
secondary schools now. My daughter came home from her
kindergarten class a couple of years ago and showed me a bar chart she had made,
and I think this marks a growing interest in building data science competencies
in all aspects of society. Now we've also introduced you to a set of
more what I would like to call mid-level data visualization techniques,
things like box plots, violin plots, histograms, and sploms. These kinds of plots I use regularly
to see the general shape of my data as I'm exploring it. I think you'll find that you use them,
too, with high-frequency. Towards the end of the class, we've also touched on a few more
advanced visualization methods, things like time series and
autocorrelation, mapping or 3D plotting. In truth, many of these will
be special-purpose use and you'll likely either use them regularly
and get to know them, or not at all. Along the way while looking
at these techniques, we've also covered some of the Python
ecosystem for visual exploration of data. Importantly, we've done a deep dive into
matplotlib, the mainstream library used for basic plotting, and we've seen
that there's lots of offshoots or even competitors to matplotlib that
can make certain techniques easier. We've seen that some techniques, like treemaps, can't even be done in the
current Python visualization libraries. So this brings us to one more
assignment for this course. In short, I've create a matrix of Python
toolkits, including libraries such as matplotlib, altera, seaborn, Boca,
plotly, and a list of techniques, including those I mentioned previously, as
well as a few others like Pareto charts, candlestick charts, or
parallel coordinate charts. Your job is to help fill in one cell in
this matrix, to take a given Python-based plotting library, and
a visual representation technique, and to build a short notebook demonstrating
how it can be used to explore data. Of course, you could go beyond the tools
and techniques that I've mentioned here, and you can find new toolkits or
approaches to understanding data and help us explore that matrix more fully. This approach, where students actually
engage in the instruction itself, is actually quite common
in graduate school. There's a great Latin proverb I like,
docendo discimus, by teaching we learn, and
it sums this approach up quite nicely. Through an exploration of the issues and
methods, with the intention of teaching others,
we're able to gain a more full understanding of whatever it
is we're studying ourselves. I'm very excited to be able to learn from
you all, and to grow my repertoire of Python-based visual exploration
techniques based on your teachings.