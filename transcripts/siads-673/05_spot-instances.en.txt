Let's talk about reliability in the cloud. When we talk about elastic workloads, we typically think that we're
getting a server, we're using it for a certain amount of time and when we're
done with it, we return it to the cloud. And that is the definition of
an elastic workload, I use the server, I'm doing my thing on it,
it's reliable, it's stable and then I return it back to
the cloud when I'm done with it. Maybe I'm using it 24/7/365, maybe I've
got a lot of traffic coming in and as a result I'm using it for
an hour to handle that traffic surge and then I'm done with it. But that's not the only
type of elastic workload. I'll give you another example. I've got a project where
I received Daikon files. Daikon files are a medical imaging and
log format file that contain images of the human body and
also some metrics that were calculated or programming specs for
certain types of machines. And these files, at least the ones I'm
getting, are around 500 gigs a piece. And I got a job, it's a python script
that goes into these files and it extracts some metrics out of them. And it takes about two hours
to run that job per file. And in the end it returns five numbers,
it's pretty simple, but it's a lot of number crunching
to get to those five numbers. And I've got a lot of these files so,
you could argue, well, okay, you should run that job 24/7 and every time you get a file you just keep
running it on a dedicated instance. But that's not how I have this set up. In this instance, I actually don't
care if that job gets interrupted. Think about it, I'm running this
statistical job on this Daikon file. If that instance were to go away, it would just restart rounding
that job on that file. And this goes into a cloud concept known
as spot instances or temporal instances. And the concept here is that Amazon,
Google, all of them, have compute power that
they're not really using. They're waiting for someone to come in and
the run an important instance, but when that's not happening,
these servers are sitting idle. And so what Amazon will do
is it will come to you and it will say, we'll give you a server, but we reserve the right to kick you off
that server with a minute or two notice. So, you can use this but,
we can remove you from it with notice. And so for my job specifically,
that's great. I fire up one of these what
are called spot instances and I say, hey, run this job and if you get
the notice from Amazon that you've need to be interrupted, that's great, just
retrigger the job to run at a later date. And spot instances
are somewhat of a marketplace. So, when we talk about
pricing of instances, we think about the pricing aspect of, this is the price and
they're fixed and they are. The on demand rate for
an instance is a fixed price. So we've been using T2 Nano instances and a T2 Nano instance is a little
under about a half a penny an hour. Some of the larger instance,
let's look at an M5 large. An M5 large instance is about 10 cents
an hour, rounding a little bit here. And so if I want to run a website,
an M5 large instance is a nice machine to do that on, two CPUs, eight gigs of RAM,
pretty good for running a website. I would pay 10 cents an hour. But, what if I want to run a job that
I don't care if it gets interrupted? Let's go take a look at
our spot instance pricing. And so we'll go find that M5 large. My M5 large, if I'm willing to have it
interrupted, is three cents an hour. So, Amazon's basically saying,
yeah, you're going to get a 70% discount on this, because we
reserve the right to interrupt you. Now, why would Amazon interrupt you? Well, what if I come in and
I say to Amazon, hey, I need 25 M5 large instances and
they don't have that available capacity. Well, they're going to go to the spot
instances that are running and say, hey, we're taking this back,
we need this available now. And depending on the size of the instance,
there's different pricing to be gained also keep in mind that spot
instance pricing is a market. So the more people that need spot
instances, the more expensive they get. And so when you configure your jobs and
you say, hey, I want to use a spot instance, what
you're actually doing is you're making a contract with Amazon for
a dollar amount. And so inside the portal, when you come in
here and you spin up a spot instance and we're not going to really do this in this
class, but you should be aware of it, you actually are making a request for
a spot instance. So, it's not when you spin up an instance
in EC2, like what we've done earlier, you're not making a request,
you're saying, I need this instance and I need it now. Here you're going to Amazon and you're
saying, okay, spin up this instance and we've been using the UBUNTU MIs, but
you can use a deep learning one, because that's probably what
you're doing with a spot instance. How many of them do you want? I want 10 of them. You can actually come in here and
say, hey, if it needs to get interrupted, should
it like respond them if possible and then you can set a maximum cost per hour. And then you're going to
go through here and you're going to specify what your
requirements are around your instance. You don't actually have to specify
it as an instance type itself. You can say, you know what,
I need eight, well, let's do two and eight gigs of RAM and
Amazon is going to come in and say, okay, well here are the instance types
that meet that requirement. And then it's going to go through it,
it's going to go build this. And so at the moment what it's
telling me is that if I wanted to spin up 20 instances and
let's make this a little bit bigger, we'll do eight CPUs and 25 gigs of RAM. It's going to basically say, to do that,
it's going to run us $15 an hour and that is a 79% savings
to on demand instances. Amazon is happy to make this arrangement
with me because from their perspective, they're going to, say, okay,
we're not using these so we'll let you use them at a reduced cost. And you've got some allocation strategy,
I forgot this tab in here. Yeah, you can say, hey, I want my
optimized, so I really want to target, I'm asking for 20 instances with
these specs give me them or only give them to me when they're
the lowest priced available. And as you increase this,
if we did 32 CPUs and 128 gigs of RAM,
you can see that my savings goes up and honestly 20 instances with
that amount of specs, that's pretty impressive. So that's how spot instance works,
it's another elastic part of the cloud. Every cloud supports
the concept of a spot instance. They call them different things,
but that's how instances work or spot instances work in AWS.